/* eslint-disable */
// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {};
loadServices();

const NIGHTWATCH_FOLDER_PATH = 'test/e2e/nightwatch/';

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  src_folders: [NIGHTWATCH_FOLDER_PATH + 'test-cases'],

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: NIGHTWATCH_FOLDER_PATH + 'pages',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
  custom_commands_path: NIGHTWATCH_FOLDER_PATH + 'custom-commands',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
  custom_assertions_path: '',

  // See https://nightwatchjs.org/guide/#external-globals
  // // globals_path: NIGHTWATCH_FOLDER_PATH + 'globalsModule.js',

  // If Selenium is not used, webdriver options should be set instead.
  webdriver: {
    start_process: true,
    server_path: Services.chromedriver.path,
    port: 9515, // The default port of chromedriver is 9515, otherwise you need to set the '--port=xxxx' in the cli_args
    cli_args: [
      // '--port=5566'
    ],
  },

  test_settings: {
    default: {
      launch_url: 'http://localhost:3001/',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          // This tells Chromedriver to run using the legacy JSONWire protocol (not required in Chrome 78)
          // w3c: false,
          // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
          args: [
            'window-size=1920,1080',
            '--ignore-certificate-errors',
            '--allow-insecure-localhost',
            '--no-sandbox',
            '--disable-dev-shm-usage',
          ],
        },
      },
      globals: {
        // default env is .80 and not support VM feature.
        skipTestCases: {
          flavorVM: true,
          projResourceStorage: false,
        },
        projResourceMgrName: 'prj4e2etest',
      },
    },
    jsonserver: {
      launch_url: 'http://localhost:3001/',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          // This tells Chromedriver to run using the legacy JSONWire protocol (not required in Chrome 78)
          // w3c: false,
          // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
          args: [
            'window-size=1920,1080',
            '--ignore-certificate-errors',
            '--allow-insecure-localhost',
            '--no-sandbox',
            '--disable-dev-shm-usage',
          ],
        },
      },
      globals: {
        skipTestCases: {
          flavorVM: false,
          projResourceStorage: true,
        },
        projResourceMgrName: 'administrator',
      },
    },
  },

  // default timeout
  // waitForConditionPollInterval: 10000,
};

function loadServices() {
  try {
    Services.chromedriver = require('chromedriver');
  } catch (err) {}
}
